---
- name: "Download kafka binary package archive"
  get_url: url={{ kafka_url }} dest={{ kafka_bin_tmp }} timeout=600

- name: "Download the corresponding cryptographic signature file"
  get_url: url={{ kafka_sig_url }} dest={{ kafka_sig_tmp }} timeout=600

- name: "Download the kafka PGP keys"
  get_url: url={{ kafka_keys_url }} dest={{ kafka_keys_tmp }} timeout=600
  changed_when: False

- name: "Import kafka PGP keys"
  shell: gpg --import {{ kafka_keys_tmp }}
  changed_when: False

- name: "Verify kafka binary package archive authenticity"
  shell: gpg --verify {{ kafka_sig_tmp }} {{ kafka_bin_tmp }}
  changed_when: False

- name: "Extract downloaded kafka archive"
  unarchive: copy=no creates=/usr/local/kafka_{{ kafka_scala_version }}-{{ kafka_version }} dest=/usr/local src={{ kafka_bin_tmp }}
  become: yes

- name: "Link /usr/local/kafka to the right version"
  file: path=/usr/local/kafka state=link src=/usr/local/kafka_{{ kafka_scala_version }}-{{ kafka_version }}
  become: yes

- name: "Create kafka directories"
  file: 
    path: "{{ item }}" 
    state: directory 
    owner: "{{ kafka_user }}" 
    group: "{{ kafka_group }}"
    mode: 0755
    recurse: yes
  become: yes
  with_items:
    - "{{ kafka_log_dir }}"
    - "{{ zookeeper_data_dir }}"

- name: "Change ownership of kafka directories"
  shell: "chown -R {{ kafka_user }}:{{ kafka_group }} {{item}}"  
  become: yes
  with_items:
    - "{{ kafka_base_dir }}"
    - "/usr/local/kafka_{{ kafka_scala_version }}-{{ kafka_version }}"


#- name: "Remove lost+found in the datadir"
#  file: path="{{ kafka_data_dir }}/lost+found" state=absent
#  become: yes

#- name: "Symlink kafka_conf_dir to /usr/local/kafka/config"
#  file: src=/usr/local/kafka/config path={{ kafka_conf_dir }} state=link
#  become: yes

- name: "Add kafka utilities to /etc/profile* so they'll be available in $PATH"
  lineinfile: dest=/etc/profile.d/Z99-kafka.sh regexp="^export PATH=.*$" line='export PATH="${PATH}:/usr/local/kafka/bin"' state=present create=yes
  become: yes

